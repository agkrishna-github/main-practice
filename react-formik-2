
import { Formik, form, Field } from 'formik'
import TextError from './TextError'

<Formik
      initialValues={initialValues}
      validationSchema={validationSchema}
      onSubmit={onSubmit}
     >
 <Form>
     <Field
          type="email"
          id="email"
          name="email"
         
        />

 </Form>

</Formik>

...................

const initialValues = {
  name: 'Vishwas',
  email: '',
  channel: '',
  comments: '',
 }

....

 <div className='form-control'>
              <label htmlFor='comments'>Comments</label>
              <Field
                as='textarea'
                id='comments'
                name='comments'
              />
              <ErrorMessage name='comments' component={TextError} />
            </div>

...........................


const initialValues = {
  name: 'Vishwas',
  email: '',
  channel: '',
  comments: '',
  address:'',
 }

....

 <div className='form-control'>
              <label htmlFor='address'>Address</label>
              <Field name='address'>
                {
                  (props)=> {

                  const {field, form, meta} = props
                      return 
                <div>
                  <input type="text" id='address' {...field} />
                    {meta.touched && meta.error ? <div> {meta.error}</div>}</div> : null }
                </div>
         }
    }
              </Field>
</div>

.....................


import React from 'react'

function TextError (props) {
  return <div className='error'>{props.children}</div>
}

export default TextError

..........

 <div className='form-control'>
              <label htmlFor='name'>Name</label>
              <Field type='text' id='name' name='name' />
              <ErrorMessage name='name' component={TextError} />
            </div>

...............


             <ErrorMessage name='email'>
                {error => <div className='error'>{error}</div>}
              </ErrorMessage>

................

const initialValues = {

  social: {
    facebook: '',
    twitter: ''
  },

}
.............

     <div className='form-control'>
              <label htmlFor='facebook'>Facebook profile</label>
              <Field type='text' id='facebook' name='social.facebook' />
            </div>

            <div className='form-control'>
              <label htmlFor='twitter'>Twitter profile</label>
              <Field type='text' id='twitter' name='social.twitter' />
            </div>

</div>

...............

const initialValues = {

  phoneNumbers: ['', ''],
 
}

 <div className='form-control'>
              <label htmlFor='primaryPh'>Primary phone number</label>
              <Field type='text' id='primaryPh' name='phoneNumbers[0]' />
 </div>

<div className='form-control'>
              <label htmlFor='secondaryPh'>Secondary phone number</label>
              <Field type='text' id='secondaryPh' name='phoneNumbers[1]' />
 </div>

.......................

import { FieldArray } from 'formik'

........

const initialValues = {

  phNumbers: [''],
 
}

.................

 <div className='form-control'>
              <label>List of phone numbers</label>
              <FieldArray name='phNumbers'>
                {fieldArrayProps => {
                  const { push, remove, form } = fieldArrayProps
                  const { values } = form
                  const { phNumbers } = values
                  // console.log('fieldArrayProps', fieldArrayProps)
                  // console.log('Form errors', form.errors)
                  return (
                    <div>
                      {phNumbers.map((phNumber, index) => (
                        <div key={index}>
                          <Field name={`phNumbers[${index}]`} />
                          {index > 0 && (
                            <button type='button' onClick={() => remove(index)}>
                              -
                            </button>
                          )}
                        </div>
                      ))}
                      <button type='button' onClick={() => push('')}>
                        +
                      </button>
                    </div>
                  )
                }}
              </FieldArray>
            </div>

............

import { FastField } from 'formik'

  <div className='form-control'>
              <label htmlFor='address'>Address</label>
              <FastField name='address'>
                {({ field, form, meta }) => {
                  // console.log('Field render')
                  return (
                    <div>
                      <input type='text' {...field} />
                      {meta.touched && meta.error ? (
                        <div>{meta.error}</div>
                      ) : null}
                    </div>
                  )
                }}
              </FastField>
            </div>

............

  <Formik
      initialValues={formValues || initialValues}
      validationSchema={validationSchema}
      onSubmit={onSubmit}
      // validateOnChange={false}
      // validateOnBlur={false}
      
    >

..................

const validateComments = value => {
  let error
  if (!value) {
    error = 'Required'
  }
  return error
}

<div className='form-control'>
              <label htmlFor='comments'>Comments</label>
              <Field
                as='textarea'
                id='comments'
                name='comments'
                validate={validateComments}
              />
              <ErrorMessage name='comments' component={TextError} />
            </div>

.............................

 <Formik
      initialValues={formValues || initialValues}
      validationSchema={validationSchema}
      onSubmit={onSubmit}
      enableReinitialize
      // validateOnChange={false}
      // validateOnBlur={false}
          >
      {formik => {
        console.log('Formik props', formik)
        return (
          <Form>
            <div className='form-control'>
              <label htmlFor='name'>Name</label>
              <Field type='text' id='name' name='name' />
              <ErrorMessage name='name' component={TextError} />
            </div>

            <button
              type='button'
              onClick={() => formik.validateField('comments')}
            >
              Validate comments
            </button>
            <button
              type='button'
              onClick={() => formik.setFieldTouched('comments')}
            >
              Visit comments
            </button>
            <button type='button' onClick={() => formik.validateForm()}>
              Validate all
            </button>
            <button
              type='button'
              onClick={() =>
                formik.setTouched({
                  name: true,
                  email: true,
                  channel: true,
                  comments: true
                })
              }
            >
              Visit all
            </button>
            <button
              type='submit'
            >
              Submit
            </button>
                  </Form>
}
</Formik>

....................

<Formik
      initialValues={initialValues}
      validationSchema={validationSchema}
      onSubmit={onSubmit}
      validateOnMount
    >

             <button
                    type='submit'
                    disabled={!formik.isValid }
                  > 
              Submit
            </button>

 
................

<Formik
      initialValues={initialValues}
      validationSchema={validationSchema}
      onSubmit={onSubmit}
     // validateOnMount
    >


             <button
                    type='submit'
                    disabled={!(formik.dirty && formik.isValid)}
                  > 
              Submit
            </button>

..............

     <button
              type='submit'
              disabled={!formik.isValid || formik.isSubmitting}
            >
              Submit
      </button>

      const onSubmit = (values, OnSubmitProps) => {
  console.log('Form data', values)
  console.log('submitProps', OnSubmitProps)
  OnSubmitProps.setSubmitting(false)
 
}


................


const savedValues = {
  name: 'Vishwas',
  email: 'v@example.com',
  channel: 'codevolution',
  comments: 'Welcome to Formik',
  address: '221B Baker Street',
  social: {
    facebook: '',
    twitter: ''
  },
  phoneNumbers: ['', ''],
  phNumbers: ['']
}

const [formValues, setFormValues] = useState(null)

<button type='button' onClick={() => setFormValues(savedValues)}>
              Load saved data
            </button>
            <button type='reset'>Reset</button>
            <button
              type='submit'
              disabled={!formik.isValid || formik.isSubmitting}
            >
              Submit
      </button>

    <Formik
      initialValues={formValues || initialValues}
      validationSchema={validationSchema}
      onSubmit={onSubmit}
      enableReinitialize
    >

....................

 <button type='reset'>Reset</button>

................

const onSubmit = (values, submitProps) => {
  console.log('Form data', values)
  console.log('submitProps', OnSubmitProps)
  OnSubmitProps.setSubmitting(false)
  OnSubmitProps.resetForm()
}

..........................













